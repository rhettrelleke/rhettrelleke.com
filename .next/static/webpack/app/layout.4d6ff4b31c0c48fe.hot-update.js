"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"62c5e7b58ef8\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvZ2xvYmFscy5jc3M/ZTQ1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjYyYzVlN2I1OGVmOFwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/AmbientRays.tsx":
/*!****************************************!*\
  !*** ./src/components/AmbientRays.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AmbientRays; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction AmbientRays() {\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const rafRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        const prefersReduced = window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches;\n        const state = {\n            w: 0,\n            h: 0,\n            t: 0\n        };\n        const setSize = ()=>{\n            const dpr = Math.min(window.devicePixelRatio || 1, 2);\n            state.w = window.innerWidth;\n            state.h = window.innerHeight;\n            canvas.width = Math.floor(state.w * dpr);\n            canvas.height = Math.floor(state.h * dpr);\n            canvas.style.width = state.w + \"px\";\n            canvas.style.height = state.h + \"px\";\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        };\n        setSize();\n        const draw = ()=>{\n            state.t += 0.005;\n            ctx.clearRect(0, 0, state.w, state.h);\n            // Colors from CSS variables\n            const accent = getComputedStyle(document.documentElement).getPropertyValue(\"--color-accent\").trim() || \"#1d87f2\";\n            const accent2 = getComputedStyle(document.documentElement).getPropertyValue(\"--color-accent-2\").trim() || \"#6e34f7\";\n            // Ambient Rays SETTINGS per burst (right + left)\n            // x,y: position as fraction of viewport size\n            // rays: total rays in burst\n            // baseFactor: inner radius  (fraction of min(width,height))\n            // maxFactor: max extension  (fraction of min(width,height))\n            // minPulse: minimum animated factor 0..1 so rays never collapse\n            // lineWidth, shadowBlur: visual thickness / glow\n            // Dual-frequency animation controls:\n            //   speedA/speedB: animation speeds\n            //   phaseA/phaseB: per-ray phase spacing (multipled by ray index)\n            //   mix: 0..1 mix between A and B (1 = all A)\n            //   jitterPhase: small random phase jitter per ray (radians)\n            const bursts = [\n                {\n                    x: state.w * 0.77,\n                    y: state.h * 0.062,\n                    rays: 20,\n                    baseFactor: 0.07,\n                    maxFactor: 0.22,\n                    minPulse: 0.35,\n                    lineWidth: 3,\n                    shadowBlur: 10,\n                    glowAlpha: \"0e\",\n                    speedA: 2.6,\n                    speedB: 1.4,\n                    phaseA: 0.55,\n                    phaseB: 0.18,\n                    mix: 0.3,\n                    jitterPhase: 1.35\n                },\n                {\n                    x: state.w * 0.23,\n                    y: state.h * 1.05,\n                    rays: 20,\n                    baseFactor: 0.065,\n                    maxFactor: 0.29,\n                    minPulse: 0.35,\n                    lineWidth: 3,\n                    shadowBlur: 10,\n                    glowAlpha: \"0e\",\n                    speedA: 2.8,\n                    speedB: 1.4,\n                    phaseA: 0.6,\n                    phaseB: 0.22,\n                    mix: 0.3,\n                    jitterPhase: 1.4\n                }\n            ];\n            // Subtle glow circle\n            const minSide = Math.min(state.w, state.h);\n            bursts.forEach((b)=>{\n                const grad = ctx.createRadialGradient(b.x, b.y, 0, b.x, b.y, minSide * 0.5);\n                grad.addColorStop(0, \"\".concat(accent).concat(b.glowAlpha));\n                grad.addColorStop(1, \"transparent\");\n                ctx.fillStyle = grad;\n                ctx.beginPath();\n                //ctx.arc(b.x, b.y, minSide * 0.45, 0, Math.PI * 2)\n                ctx.fill();\n            });\n            // Rays\n            // Small deterministic hash for per-ray jitter (no deps)\n            const hash = (x)=>{\n                const s = Math.sin(x * 127.1) * 43758.5453;\n                return s - Math.floor(s);\n            };\n            const drawBurst = (centerX, centerY, rays, baseRadius, maxRay, minPulse, lineWidth, shadowBlur, speedA, speedB, phaseA, phaseB, mix, jitterPhase)=>{\n                for(let i = 0; i < rays; i++){\n                    const a = i / rays * Math.PI * 2;\n                    // Dual-frequency sum with small per-ray jitter for an organic feel\n                    const jitter = (hash(i + centerX * 0.01) - 0.5) * jitterPhase;\n                    const nA = Math.sin(state.t * speedA + i * phaseA + jitter) * 0.5 + 0.5;\n                    const nB = Math.sin(state.t * speedB + i * phaseB + jitter + 1.3) * 0.5 + 0.5;\n                    const n = mix * nA + (1 - mix) * nB // 0..1\n                    ;\n                    // Enforce a minimum ray factor so rays never get too short.\n                    // Increase minPulse (0..1) to raise the minimum length.\n                    const pulse = minPulse + (1 - minPulse) * n;\n                    const len = baseRadius + pulse * maxRay;\n                    const x1 = centerX + Math.cos(a) * (baseRadius * 0.8);\n                    const y1 = centerY + Math.sin(a) * (baseRadius * 0.8);\n                    const x2 = centerX + Math.cos(a) * len;\n                    const y2 = centerY + Math.sin(a) * len;\n                    const g = ctx.createLinearGradient(x1, y1, x2, y2);\n                    g.addColorStop(0, \"\".concat(accent2, \"00\"));\n                    // 20% lower opacity than before (0x66 -> ~0x52)\n                    g.addColorStop(0.25, \"\".concat(accent2, \"52\"));\n                    // 20% lower opacity than before (0xaa -> ~0x88)\n                    g.addColorStop(0.7, \"\".concat(accent, \"88\"));\n                    g.addColorStop(1, \"\".concat(accent, \"00\"));\n                    ctx.strokeStyle = g;\n                    // Slightly thicker rays for presence\n                    ctx.lineWidth = lineWidth;\n                    // Soft bleed\n                    ctx.shadowColor = \"\".concat(accent, \"22\");\n                    ctx.shadowBlur = shadowBlur;\n                    ctx.beginPath();\n                    ctx.moveTo(x1, y1);\n                    ctx.lineTo(x2, y2);\n                    ctx.stroke();\n                    // reset shadow to avoid compounding\n                    ctx.shadowBlur = 0;\n                }\n            };\n            // draw bursts with individual settings\n            bursts.forEach((b)=>{\n                const baseR = minSide * b.baseFactor;\n                const maxR = minSide * b.maxFactor;\n                drawBurst(b.x, b.y, b.rays, baseR, maxR, b.minPulse, b.lineWidth, b.shadowBlur, b.speedA, b.speedB, b.phaseA, b.phaseB, b.mix, b.jitterPhase);\n            });\n        };\n        let last = 0;\n        const loop = (now)=>{\n            if (!prefersReduced) {\n                // Aim ~60fps; throttle if tab is busy\n                if (now - last > 16) {\n                    draw();\n                    last = now;\n                }\n                rafRef.current = requestAnimationFrame(loop);\n            } else {\n                draw();\n            }\n        };\n        rafRef.current = requestAnimationFrame(loop);\n        window.addEventListener(\"resize\", setSize);\n        return ()=>{\n            if (rafRef.current) cancelAnimationFrame(rafRef.current);\n            window.removeEventListener(\"resize\", setSize);\n        };\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n        ref: canvasRef,\n        \"aria-hidden\": true,\n        style: {\n            position: \"fixed\",\n            inset: 0,\n            zIndex: 0,\n            pointerEvents: \"none\"\n        }\n    }, void 0, false, {\n        fileName: \"C:\\\\rhettrelleke.com\\\\src\\\\components\\\\AmbientRays.tsx\",\n        lineNumber: 161,\n        columnNumber: 5\n    }, this);\n}\n_s(AmbientRays, \"6iViuhYzYlm4tmNfBBzgjqV3lJ8=\");\n_c = AmbientRays;\nvar _c;\n$RefreshReg$(_c, \"AmbientRays\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/AmbientRays.tsx\n"));

/***/ })

});